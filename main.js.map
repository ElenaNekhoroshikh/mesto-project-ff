{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export { getUserInfoFromServer, \r\n    getInitialCards, \r\n    patchProfileForm, \r\n    updateAvatar, \r\n    postAddNewCard, \r\n    handleDeleteCard, \r\n    handleCardLike, \r\n    deleteLikeCard };\r\n\r\nconst config = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-18',\r\n    headers: {\r\n        authorization: 'ee6775c4-c17e-432d-bed8-520cdb750d81',\r\n        'Content-Type': 'application/json',\r\n    },\r\n};\r\n\r\nconst handlerResult = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    } // Если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\n// GET-запрос информации о пользователе\r\nconst getUserInfoFromServer = () => {           \r\n    return  fetch(`${config.baseUrl}/users/me`, {\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Загрузка карточек с сервера\r\n const getInitialCards = () => {          \r\n    return  fetch(`${config.baseUrl}/cards`, {\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Редактирование профиля\r\nconst patchProfileForm = (userInfo) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: userInfo.name,\r\n            about: userInfo.about,\r\n        })\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Запрос обновления аватара\r\nconst updateAvatar = (link) => {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: link.link,\r\n        }),\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Добавление новой карточки\r\n\r\nconst postAddNewCard = (dataCard) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: dataCard.name,\r\n            link: dataCard.link,\r\n        })\r\n    }).then(handlerResult);\r\n};\r\n\r\n// удаление карточки\r\nconst handleDeleteCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Добавление лайка\r\n\r\nconst handleCardLike = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Запрос удаления лайка\r\nconst deleteLikeCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};","import { handleCardLike, deleteLikeCard } from './api.js';\r\nexport { createCard, addLike };\r\n\r\n// @todo: Функция создания карточки\r\nconst createCard = ({\r\n  cardTemplate,\r\n  userId, \r\n  dataCard, \r\n  deleteCard, \r\n  addLike, \r\n  openImagePopup}) => {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const countLikes = cardElement.querySelector('.card__counter-like');\r\n\r\n  cardTitle.textContent = dataCard.name;\r\n  cardImage.src = dataCard.link;\r\n  cardImage.alt = 'Фотография с места - ' + dataCard.name;\r\n  cardElement.id = dataCard['_id'];\r\n  countLikes.textContent = dataCard.likes.length;\r\n\r\n  const isLiked = dataCard.likes.some((like) => like._id === userId);\r\n  if (isLiked) {\r\n    likeButton.classList.add('card__like-button_is-active');\r\n  }\r\n\r\n  if (dataCard.owner._id === userId) {\r\n    deleteButton.addEventListener('click', (evt) => {\r\n      deleteCard(dataCard._id);\r\n    });\r\n  } else {\r\n    deleteButton.remove();\r\n  }\r\n\r\n  likeButton.addEventListener('click', (evt) => {\r\n    addLike(evt, dataCard._id, countLikes);\r\n  });\r\n\r\n  cardImage.addEventListener('click', () => {\r\n    openImagePopup(dataCard.link, dataCard.name);\r\n  });\r\n\r\nreturn cardElement;\r\n};\r\n\r\n// Функция лайка\r\nconst addLike = (evt, cardId, countLikes) => {\r\n  if (evt.target.classList.contains('card__like-button_is-active')) {\r\n    deleteLikeCard(cardId)\r\n    .then((updateCard) => {\r\n      evt.target.classList.remove('card__like-button_is-active');\r\n      countLikes.textContent = updateCard.likes.length;\r\n    }).catch((err) => {\r\n      console.log('Ошибка удаления лайка:', err);\r\n    });\r\n  } else {\r\n    handleCardLike(cardId)\r\n    .then((updateCard) => {\r\n      evt.target.classList.add('card__like-button_is-active');\r\n      countLikes.textContent = updateCard.likes.length;\r\n    }).catch((err) => {\r\n      console.log('Ошибка добавления лайка:', err);\r\n    });\r\n  }\r\n};","export { openPopup, closePopup };\r\n\r\n// Функция для открытия попапа\r\nfunction openPopup(popup) {\r\n  // Добавляем класс для открытия попапа\r\n  popup.classList.add('popup_is-opened');\r\n  // Добавляем класс для анимации открытия попапа\r\n  popup.classList.add('popup_is-animated');\r\n  \r\n  // Добавляем обработчик события для нажатия клавиши \"Escape\"\r\n  document.addEventListener('keydown', closeEscPopup);\r\n}\r\n\r\n// Функция для закрытия попапа\r\nfunction closePopup(popup) {\r\n  // Убираем класс для открытия попапа\r\n  popup.classList.remove('popup_is-opened');\r\n  // Добавляем класс для анимации закрытия попапа\r\n  popup.classList.add('popup_is-animated');\r\n\r\n   // Удаляем обработчик события для нажатия клавиши \"Escape\"\r\n  document.removeEventListener('keydown', closeEscPopup);\r\n}\r\n\r\n// Функция для закрытия попапа при нажатии клавиши \"Escape\"\r\nfunction closeEscPopup(evt) {\r\n  if(evt.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened');\r\n    closePopup(popup);\r\n  }\r\n}\r\n","export { enableValidation, clearValidation }\r\n\r\n\r\n// Показать ошибку\r\nconst showInputError = (formElement, inputElement, errorMessage, configValidation) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`)\r\n  inputElement.classList.add(configValidation.inputErrorClass);\r\n  if (inputElement.validity.valueMissing) {\r\n    errorElement.textContent = 'Вы пропустили это поле';\r\n  } else {\r\n    errorElement.textContent = errorMessage;\r\n  }\r\n  errorElement.classList.add(configValidation.errorClass);\r\n};\r\n\r\n// Скрыть ошибку\r\nconst hideInputError = (formElement, inputElement, configValidation) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`)\r\n  inputElement.classList.remove(configValidation.inputErrorClass);\r\n  errorElement.classList.remove(configValidation.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n// Валидация формы\r\nconst checkInputValidity = (formElement, inputElement, configValidation) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, configValidation);\r\n  } else {\r\n    hideInputError(formElement, inputElement, configValidation);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n  };\r\n  \r\n  const toggleButtonState = (inputList, buttonElement, configValidation) => {\r\n    if (hasInvalidInput(inputList)) {\r\n  buttonElement.classList.add(configValidation.inactiveButtonClass);\r\n  buttonElement.setAttribute('disabled', 'disabled');\r\n    } else {\r\n  buttonElement.classList.remove(configValidation.inactiveButtonClass);\r\n  buttonElement.removeAttribute('disabled');\r\n    }\r\n  };\r\n\r\nconst setEventListeners = (formElement, configValidation) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector));\r\n  const buttonElement = formElement.querySelector(configValidation.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, configValidation);\r\n  inputList.forEach ((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, configValidation);\r\n      toggleButtonState(inputList, buttonElement, configValidation);\r\n    });\r\n  });\r\n  };\r\n\r\n  const enableValidation = (configValidation) => {\r\n    const inputForm = Array.from(document.querySelectorAll(configValidation.formSelector));\r\n    inputForm.forEach((formElement) => {\r\n      formElement.addEventListener('submit', (evt) => {\r\n      evt.preventDefault()\r\n      });\r\n      setEventListeners(formElement, configValidation);\r\n    });\r\n  };\r\n\r\n  // Очистка валидации\r\n  const clearValidation = (formElement, configValidation) => {\r\n    const inputList = Array.from(\r\n      formElement.querySelectorAll(configValidation.inputSelector)\r\n    );\r\n    const buttonElement = formElement.querySelector(\r\n      configValidation.submitButtonSelector\r\n    );\r\n\r\n    inputList.textContent = '';\r\n\r\n    toggleButtonState(inputList, buttonElement, configValidation.inactiveButtonClass);\r\n\r\n    inputList.forEach((inputElement) => {\r\n      hideInputError(formElement, inputElement, configValidation.inputErrorClass, configValidation.errorClass);\r\n      inputElement.setCustomValidity('');\r\n      inputElement.classList.remove(configValidation.inputErrorClass);\r\n    });\r\n  };","import './pages/index.css'; // импорт главного файла стилей\r\nimport { createCard, addLike } from './components/card.js';\r\nimport { openPopup, closePopup } from './components/modal.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\nimport {\r\n  getUserInfoFromServer,\r\n  getInitialCards,\r\n  patchProfileForm,\r\n  postAddNewCard,\r\n  handleDeleteCard,\r\n  updateAvatar,\r\n} from './components/api.js';\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst newPlace = document.forms['new-place'];\r\nconst placeName = newPlace.querySelector('.popup__input_type_card-name');\r\nconst placeLink = newPlace.querySelector('.popup__input_type_url');\r\n\r\n// Находим все элементы с классом 'popup' на странице\r\nconst popups = document.querySelectorAll('.popup');\r\n\r\n// Находим элементы попапов на странице\r\nconst popupProfile = document.querySelector('.popup_type_edit');\r\nconst popupAddNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupImage = document.querySelector('.popup_type_image');\r\n\r\n// Находим кнопки для открытия попапов\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\n// Находим элементы внутри попапа изображения\r\nconst popupImageImage = document.querySelector('.popup__image');\r\nconst popupCaptionImage = document.querySelector('.popup__caption');\r\n\r\n// Находим элементы формы редактирования профиля\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\n\r\nconst profileForm = document.forms['edit-profile'];\r\nconst avatarForm = document.forms['edit-avatar'];\r\n\r\nconst modalAvatar = document.querySelector('.popup_type_avatar');\r\nconst nameInput = profileForm.querySelector('.popup__input_type_name');\r\nconst jobInput = profileForm.querySelector('.popup__input_type_description');\r\nconst popupAlert = document.querySelector('.popup_type_alert');\r\nconst submitDeleteCard = popupAlert.querySelector('.popup__button-alert');\r\n\r\nlet userId;\r\n\r\n// Функция кнопки сохранения\r\nconst renderLoading = (isLoading, buttonElement) => {\r\n  if (isLoading) {\r\n    buttonElement.textContent = 'Сохранение...';\r\n  } else {\r\n    buttonElement.textContent = 'Сохранить';\r\n    buttonElement.classList.add(configValidation.inactiveButtonClass);\r\n    buttonElement.setAttribute('disabled', true);\r\n  }\r\n};\r\n\r\n//Функция добавления новой карточки\r\nnewPlace.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  const buttonElement = evt.submitter;\r\n  renderLoading(true, buttonElement);\r\n  postAddNewCard({\r\n    name: placeName.value,\r\n    link: placeLink.value,\r\n  }).then((dataCard) => {\r\n    const cardElement = createCard({\r\n      cardTemplate, userId, dataCard, deleteCard, addLike, openImagePopup,\r\n    });\r\n    cardsContainer.prepend(cardElement);\r\n    newPlace.reset();\r\n    closePopup(popupAddNewCard);\r\n  }).catch((err) => {\r\n    console.log('Ошибка добавления карточки:', err);\r\n  }).finally(() => {\r\n    renderLoading(false, buttonElement);\r\n  });\r\n});\r\n\r\n// Функция удаления карточки\r\nconst deleteCard = (cardId) => {\r\n  openPopup(popupAlert);\r\n  popupAlert.dataset.cardId = cardId;\r\n};\r\n\r\nconst confirmDeleteCard = () => {\r\n  handleDeleteCard(popupAlert.dataset.cardId)\r\n  .then((result) => {\r\n    console.log(result);\r\n    const delCard = document.getElementById(popupAlert.dataset.cardId);\r\n    delCard.remove();\r\n    closePopup(popupAlert);\r\n  }).catch((err) => {\r\n    console.log('Ошибка удаления карточки:', err);\r\n  });\r\n};\r\n\r\n// Функция для открытия попапа изображения\r\nconst openImagePopup = (link, alt) => {\r\n  popupImageImage.src = link;\r\n  popupImageImage.alt = alt;\r\n  popupCaptionImage.textContent = alt;\r\n  openPopup(popupImage);\r\n};\r\n\r\n// Функция редактирования профиля\r\nprofileForm.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  const buttonElement = evt.submitter;\r\n  renderLoading(true, buttonElement);\r\n  patchProfileForm({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  }).then((userInfo) => {\r\n    profileTitle.textContent = userInfo.name;\r\n    profileDescription.textContent = userInfo.about;\r\n    closePopup(popupProfile);\r\n  }).catch((err) => {\r\n    console.log('Ошибка изменения данных пользователя:', err);\r\n  }).finally(() => {\r\n    renderLoading(false, buttonElement);\r\n  });\r\n});\r\n\r\n// Функция обновления аватара\r\nconst updateAvatarForm = (evt) => {\r\n  evt.preventDefault();\r\n  const buttonElement = evt.submitter;\r\n  renderLoading(true, buttonElement);\r\n  updateAvatar({\r\n    link: avatarForm.link.value,\r\n  }).then((userInfo) => {\r\n    profileAvatar.style.backgroundImage = `url(${userInfo.avatar})`;\r\n    closePopup(modalAvatar);\r\n  }).catch((err) => {\r\n    console.log('Ошибка добавления аватара:', err);\r\n  }).finally(() => {\r\n    renderLoading(false, buttonElement);\r\n  });\r\n};\r\n\r\n// Добавляем обработчик события для открытия попапа редактирования профиля\r\neditButton.addEventListener('click', () => {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  openPopup(popupProfile);\r\n  clearValidation(profileForm, configValidation);\r\n});\r\n\r\naddButton.addEventListener('click', () => {\r\n  newPlace.reset();\r\n  openPopup(popupAddNewCard);\r\n  clearValidation(newPlace, configValidation);\r\n});\r\n\r\nprofileAvatar.addEventListener('click', () => {\r\n  avatarForm.reset();\r\n  clearValidation(avatarForm, configValidation);\r\n  openPopup(modalAvatar);\r\n});\r\n\r\nsubmitDeleteCard.addEventListener('click', confirmDeleteCard);\r\navatarForm.addEventListener('submit', updateAvatarForm)\r\n\r\n// Вывод карточек на страницу с информацией пользователя\r\nPromise.all([getInitialCards(), getUserInfoFromServer()])\r\n  .then(([initialCards, userInfo]) => {\r\n    profileTitle.textContent = userInfo.name;\r\n    profileDescription.textContent = userInfo.about;\r\n    profileAvatar.style.backgroundImage = `url(${userInfo.avatar})`;\r\n    userId = userInfo._id;\r\n\r\n    initialCards.forEach((dataCard) => {\r\n      const cardElement = createCard({\r\n        cardTemplate, userId, dataCard, deleteCard, addLike, openImagePopup,\r\n      });\r\n      cardsContainer.append(cardElement);\r\n    });\r\n  }).catch((err) => {\r\n    console.log('Ошибка передачи карточки:', err);\r\n  });\r\n\r\n  // Добавляем обработчики событий для каждого попапа на оверлэй и кнопку\r\npopups.forEach((popup) => {\r\n  popup.addEventListener('click', (evt) => {\r\n    // Закрываем попап, если кликнули по самому попапу или по элементу с классом 'popup__close'\r\n    if (\r\n      evt.target === evt.currentTarget ||\r\n      evt.target.classList.contains('popup__close')\r\n    ) {\r\n      const modal = document.querySelector('.popup_is-opened');\r\n      closePopup(modal);\r\n    }\r\n  });\r\n});\r\n\r\n  const configValidation = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    errorVisible: '.popup__error_visible',\r\n    inputErrorVisible: '.popup__input_type_error',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible',\r\n  };\r\n\r\n  enableValidation(configValidation);\r\n\r\n  // Функция для установки текущего года в элемент с id 'year'\r\ndocument.getElementById('year').textContent = new Date().getFullYear();"],"names":["config","baseUrl","headers","authorization","handlerResult","res","ok","json","Promise","reject","concat","status","createCard","_ref","cardTemplate","userId","dataCard","deleteCard","addLike","openImagePopup","cardElement","querySelector","cloneNode","cardImage","deleteButton","likeButton","cardTitle","countLikes","textContent","name","src","link","alt","id","likes","length","some","like","_id","classList","add","owner","addEventListener","evt","remove","cardId","target","contains","fetch","method","then","deleteLikeCard","updateCard","catch","err","console","log","handleCardLike","openPopup","popup","document","closeEscPopup","closePopup","removeEventListener","key","hideInputError","formElement","inputElement","configValidation","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","inactiveButtonClass","removeAttribute","setAttribute","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","setCustomValidity","cardsContainer","content","newPlace","forms","placeName","placeLink","popups","popupProfile","popupAddNewCard","popupImage","editButton","addButton","popupImageImage","popupCaptionImage","profileTitle","profileDescription","profileAvatar","profileForm","avatarForm","modalAvatar","nameInput","jobInput","popupAlert","submitDeleteCard","renderLoading","isLoading","preventDefault","submitter","value","body","JSON","stringify","prepend","reset","finally","dataset","userInfo","about","result","getElementById","avatar","style","backgroundImage","all","_ref2","initialCards","append","currentTarget","formSelector","errorVisible","inputErrorVisible","patternMismatch","errorMessage","valueMissing","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","Date","getFullYear"],"sourceRoot":""}