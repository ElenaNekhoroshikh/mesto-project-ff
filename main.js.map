{"version":3,"file":"main.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,kBCIlF,IAAMI,EAAa,SAAHC,GAKM,IAJpBC,EAAMD,EAANC,OACAC,EAAQF,EAARE,SACAC,EAAUH,EAAVG,WACAC,EAAOJ,EAAPI,QACAC,EAAcL,EAAdK,eACMC,EAAcC,EAAaC,cAAc,iBAAiBC,WAAU,GACpEC,EAAYJ,EAAYE,cAAc,gBACtCG,EAAeL,EAAYE,cAAc,wBACzCI,EAAaN,EAAYE,cAAc,sBACvCK,EAAYP,EAAYE,cAAc,gBACtCM,EAAaR,EAAYE,cAAc,uBA6B/C,OA3BEK,EAAUE,YAAcb,EAASc,KACjCN,EAAUO,IAAMf,EAASgB,KACzBR,EAAUS,IAAM,wBAA0BjB,EAASc,KACnDV,EAAYc,GAAKlB,EAAc,IAC/BY,EAAWC,YAAcb,EAASmB,MAAMC,OAExBpB,EAASmB,MAAME,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAQxB,CAAM,KAE/DW,EAAWc,UAAUC,IAAI,+BAGvBzB,EAAS0B,MAAMH,MAAQxB,EACzBU,EAAakB,iBAAiB,SAAS,SAACC,GACtC3B,EAAWD,EAASuB,IACtB,IAEAd,EAAaoB,SAGfnB,EAAWiB,iBAAiB,SAAS,SAACC,GACpC1B,EAAQ0B,EAAK5B,EAASuB,IAAKX,EAC7B,IAEAJ,EAAUmB,iBAAiB,SAAS,WAClCxB,EAAeH,EAASgB,KAAMhB,EAASc,KACzC,IAEKV,CACP,EC1CA,SAAS0B,EAAUC,GAEjBA,EAAMP,UAAUC,IAAI,mBAEpBM,EAAMP,UAAUC,IAAI,qBAGpBO,SAASL,iBAAiB,UAAWM,EACvC,CAGA,SAASC,EAAWH,GAElBA,EAAMP,UAAUK,OAAO,mBAEvBE,EAAMP,UAAUC,IAAI,qBAGpBO,SAASG,oBAAoB,UAAWF,EAC1C,CAGA,SAASA,EAAcL,GACN,WAAZA,EAAI1C,KAELgD,EADcF,SAAS1B,cAAc,oBAGzC,CC1BA,IAYM8B,EAAiB,SAACC,EAAaC,EAAcC,GACjD,IAAMC,EAAeH,EAAY/B,cAAc,IAADmC,OAAKH,EAAapB,GAAE,WAClEoB,EAAad,UAAUK,OAAOU,EAAiBG,iBAC/CF,EAAahB,UAAUK,OAAOU,EAAiBI,YAC/CH,EAAa3B,YAAc,EAC7B,EAuBQ+B,EAAoB,SAACC,EAAWC,EAAeP,IAN/B,SAACM,GACvB,OAAOA,EAAUxB,MAAK,SAACiB,GACrB,OAAQA,EAAaS,SAASC,KAChC,GACA,CAGMC,CAAgBJ,IAItBC,EAActB,UAAUK,OAAOU,EAAiBW,qBAChDJ,EAAcK,gBAAgB,YAAY,KAJ1CL,EAActB,UAAUC,IAAIc,EAAiBW,qBAC7CJ,EAAcM,aAAa,YAAY,GAKvC,EAyBMC,EAAkB,SAAChB,EAAaE,GACpC,IAAMM,EAAYS,MAAMC,KACtBlB,EAAYmB,iBAAiBjB,EAAiBkB,gBAE1CX,EAAgBT,EAAY/B,cAChCiC,EAAiBmB,sBAGnBb,EAAUhC,YAAc,GAExB+B,EAAkBC,EAAWC,EAAeP,EAAiBW,qBAE7DL,EAAUc,SAAQ,SAACrB,GACjBF,EAAeC,EAAaC,EAAcC,EAAiBG,gBAAiBH,EAAiBI,YAC7FL,EAAasB,kBAAkB,IAC/BtB,EAAad,UAAUK,OAAOU,EAAiBG,gBACjD,GACF,EC9FImB,EAAS,CACXC,QAAS,kDACTC,QAAS,CACLC,cAAe,uCACf,eAAgB,qBAIlBC,EAAgB,SAACC,GACnB,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAO,WAAD7B,OAAYyB,EAAIK,QACzC,E,sGCEA,IAoCIxE,EApCEyE,EAAiBxC,SAAS1B,cAAc,iBACjCD,EAAe2B,SAAS1B,cAAc,kBAAkBmE,QACxDC,EAAW1C,SAAS2C,MAAM,aACjCC,EAAYF,EAASpE,cAAc,gCACnCuE,EAAYH,EAASpE,cAAc,0BAGnCwE,EAAS9C,SAASwB,iBAAiB,UAGnCuB,EAAe/C,SAAS1B,cAAc,oBACtC0E,EAAkBhD,SAAS1B,cAAc,wBACzC2E,EAAajD,SAAS1B,cAAc,qBAGpC4E,EAAalD,SAAS1B,cAAc,yBACpC6E,EAAYnD,SAAS1B,cAAc,wBAGnC8E,EAAkBpD,SAAS1B,cAAc,iBACzC+E,EAAoBrD,SAAS1B,cAAc,mBAG3CgF,EAAetD,SAAS1B,cAAc,mBACtCiF,EAAqBvD,SAAS1B,cAAc,yBAC5CkF,EAAgBxD,SAAS1B,cAAc,mBAEvCmF,EAAczD,SAAS2C,MAAM,gBAC7Be,EAAa1D,SAAS2C,MAAM,eAE5BgB,EAAc3D,SAAS1B,cAAc,sBACrCsF,EAAYH,EAAYnF,cAAc,2BACtCuF,EAAWJ,EAAYnF,cAAc,kCACrCwF,EAAa9D,SAAS1B,cAAc,qBACpCyF,EAAmBD,EAAWxF,cAAc,wBAK5C0F,EAAgB,SAACC,EAAWnD,GAC5BmD,EACFnD,EAAcjC,YAAc,iBAE5BiC,EAAcjC,YAAc,gBAC5BiC,EAActB,UAAUC,IAAIc,EAAiBW,qBAC7CJ,EAAcM,aAAa,YAAY,GAE3C,EAGAsB,EAAS/C,iBAAiB,UAAU,SAACC,GACnCA,EAAIsE,iBACJ,IDZ6BlG,ECYvB8C,EAAgBlB,EAAIuE,UAC1BH,GAAc,EAAMlD,IDbS9C,ECcd,CACbc,KAAM8D,EAAUwB,MAChBpF,KAAM6D,EAAUuB,ODfTC,MAAM,GAAD5D,OAAIoB,EAAOC,QAAO,UAAU,CACpCwC,OAAQ,OACRvC,QAASF,EAAOE,QAChBwC,KAAMC,KAAKC,UAAU,CACjB3F,KAAMd,EAASc,KACfE,KAAMhB,EAASgB,SAEpB0F,KAAKzC,ICSPyC,MAAK,SAAC1G,GACP,IAAMI,EAAcP,EAAW,CAC7BE,OAAAA,EAAQC,SAAAA,EAAUC,WAAAA,EAAYC,QAAAA,EAASC,eAAAA,IAEzCqE,EAAemC,QAAQvG,GACvBsE,EAASkC,QACT1E,EAAW8C,EACb,IAAG6B,OAAM,SAACC,GACRC,QAAQC,IAAI,8BAA+BF,EAC7C,IAAGG,SAAQ,WACTjB,GAAc,EAAOlD,EACvB,GACF,IAGA,IAAM5C,EAAU,SAAC0B,EAAKsF,EAAQtG,GACxBgB,EAAIuF,OAAO3F,UAAU4F,SAAS,+BDJN,SAACF,GAC3B,OAAOb,MAAM,GAAD5D,OAAIoB,EAAOC,QAAO,iBAAArB,OAAgByE,GAAU,CACpDZ,OAAQ,MACRvC,QAASF,EAAOE,UACjB2C,KAAKzC,EACZ,CCAIoD,CAAeH,GACdR,MAAK,SAACY,GACL1F,EAAIuF,OAAO3F,UAAUK,OAAO,+BAC5BjB,EAAWC,YAAcyG,EAAWnG,MAAMC,MAC5C,IAAGyF,OAAM,SAACC,GACRC,QAAQC,IAAI,yBAA0BF,EACxC,IDnB0B,SAACI,GAC3B,OAAOb,MAAM,GAAD5D,OAAIoB,EAAOC,QAAO,iBAAArB,OAAgByE,GAAU,CACpDZ,OAAQ,MACRvC,QAASF,EAAOE,UACjB2C,KAAKzC,EACZ,CCgBIsD,CAAeL,GACdR,MAAK,SAACY,GACL1F,EAAIuF,OAAO3F,UAAUC,IAAI,+BACzBb,EAAWC,YAAcyG,EAAWnG,MAAMC,MAC5C,IAAGyF,OAAM,SAACC,GACRC,QAAQC,IAAI,2BAA4BF,EAC1C,GAEJ,EAGM7G,EAAa,SAACiH,GAClBpF,EAAUgE,GACVA,EAAW0B,QAAQN,OAASA,CAC9B,EAeM/G,EAAiB,SAACa,EAAMC,GAC5BmE,EAAgBrE,IAAMC,EACtBoE,EAAgBnE,IAAMA,EACtBoE,EAAkBxE,YAAcI,EAChCa,EAAUmD,EACZ,EAGAQ,EAAY9D,iBAAiB,UAAU,SAACC,GACtCA,EAAIsE,iBACJ,IDzG+BuB,ECyGzB3E,EAAgBlB,EAAIuE,UAC1BH,GAAc,EAAMlD,ID1GW2E,EC2Gd,CACf3G,KAAM8E,EAAUQ,MAChBsB,MAAO7B,EAASO,OD5GTC,MAAM,GAAD5D,OAAIoB,EAAOC,QAAO,aAAa,CACvCwC,OAAQ,QACRvC,QAASF,EAAOE,QAChBwC,KAAMC,KAAKC,UAAU,CACjB3F,KAAM2G,EAAS3G,KACf4G,MAAOD,EAASC,UAErBhB,KAAKzC,ICsGPyC,MAAK,SAACe,GACPnC,EAAazE,YAAc4G,EAAS3G,KACpCyE,EAAmB1E,YAAc4G,EAASC,MAC1CxF,EAAW6C,EACb,IAAG8B,OAAM,SAACC,GACRC,QAAQC,IAAI,wCAAyCF,EACvD,IAAGG,SAAQ,WACTjB,GAAc,EAAOlD,EACvB,GACF,IAoBAoC,EAAWvD,iBAAiB,SAAS,WACnCiE,EAAUQ,MAAQd,EAAazE,YAC/BgF,EAASO,MAAQb,EAAmB1E,YACpCiB,EAAUiD,GACV1B,EAAgBoC,EAAalD,EAC/B,IAEA4C,EAAUxD,iBAAiB,SAAS,WAClC+C,EAASkC,QACT9E,EAAUkD,GACV3B,EAAgBqB,EAAUnC,EAC5B,IAEAiD,EAAc7D,iBAAiB,SAAS,WACtC+D,EAAWkB,QACXvD,EAAgBqC,EAAYnD,GAC5BT,EAAU6D,EACZ,IAEAI,EAAiBpE,iBAAiB,SA5ER,WD9CM,IAACuF,KC+CdpB,EAAW0B,QAAQN,OD9C3Bb,MAAM,GAAD5D,OAAIoB,EAAOC,QAAO,WAAArB,OAAUyE,GAAU,CAC9CZ,OAAQ,SACRvC,QAASF,EAAOE,UACjB2C,KAAKzC,IC4CTyC,MAAK,SAACiB,GACLZ,QAAQC,IAAIW,GACI3F,SAAS4F,eAAe9B,EAAW0B,QAAQN,QACnDrF,SACRK,EAAW4D,EACb,IAAGe,OAAM,SAACC,GACRC,QAAQC,IAAI,4BAA6BF,EAC3C,GACF,IAmEApB,EAAW/D,iBAAiB,UArCH,SAACC,GACxBA,EAAIsE,iBACJ,IDhH2BlF,ECgHrB8B,EAAgBlB,EAAIuE,UAC1BH,GAAc,EAAMlD,IDjHO9B,ECkHd,CACXA,KAAM0E,EAAW1E,KAAKoF,ODlHfC,MAAM,GAAD5D,OAAIoB,EAAOC,QAAO,oBAAoB,CAC9CwC,OAAQ,QACRvC,QAASF,EAAOE,QAChBwC,KAAMC,KAAKC,UAAU,CACjBoB,OAAQ7G,EAAKA,SAElB0F,KAAKzC,IC6GPyC,MAAK,SAACe,GACPjC,EAAcsC,MAAMC,gBAAkB,OAAHtF,OAAUgF,EAASI,OAAM,KAC5D3F,EAAWyD,EACb,IAAGkB,OAAM,SAACC,GACRC,QAAQC,IAAI,6BAA8BF,EAC5C,IAAGG,SAAQ,WACTjB,GAAc,EAAOlD,EACvB,GACF,IA0BAuB,QAAQ2D,IAAI,CDxKA3B,MAAM,GAAD5D,OAAIoB,EAAOC,QAAO,UAAU,CACrCC,QAASF,EAAOE,UACjB2C,KAAKzC,GATAoC,MAAM,GAAD5D,OAAIoB,EAAOC,QAAO,aAAa,CACxCC,QAASF,EAAOE,UACjB2C,KAAKzC,KC8KTyC,MAAK,SAAA5G,GAA8B,I,IAAAmI,G,EAAA,E,4CAAAnI,I,s1BAA5BoI,EAAYD,EAAA,GAAER,EAAQQ,EAAA,GAC5B3C,EAAazE,YAAc4G,EAAS3G,KACpCyE,EAAmB1E,YAAc4G,EAASC,MAC1ClC,EAAcsC,MAAMC,gBAAkB,OAAHtF,OAAUgF,EAASI,OAAM,KAC5D9H,EAAS0H,EAASlG,IAElB2G,EAAavE,SAAQ,SAAC3D,GACpB,IAAMI,EAAcP,EAAW,CAC7BE,OAAAA,EAAQC,SAAAA,EAAUC,WAAAA,EAAYC,QAAAA,EAASC,eAAAA,IAEzCqE,EAAe2D,OAAO/H,EACxB,GACF,IAAGyG,OAAM,SAACC,GACRC,QAAQC,IAAI,4BAA6BF,EAC3C,IAGFhC,EAAOnB,SAAQ,SAAC5B,GACdA,EAAMJ,iBAAiB,SAAS,SAACC,IAG7BA,EAAIuF,SAAWvF,EAAIwG,eACnBxG,EAAIuF,OAAO3F,UAAU4F,SAAS,kBAG9BlF,EADcF,SAAS1B,cAAc,oBAGzC,GACF,IAEE,IAAMiC,EAAmB,CACvB8F,aAAc,eACd5E,cAAe,gBACfC,qBAAsB,iBACtB4E,aAAc,wBACdC,kBAAmB,2BACnBrF,oBAAqB,yBACrBR,gBAAiB,0BACjBC,WAAY,yBFtKW,SAACJ,GACNe,MAAMC,KAAKvB,SAASwB,iBAAiBjB,EAAiB8F,eAC9D1E,SAAQ,SAACtB,GACjBA,EAAYV,iBAAiB,UAAU,SAACC,GACxCA,EAAIsE,gBACJ,IAjBoB,SAAC7D,EAAaE,GACtC,IAAMM,EAAYS,MAAMC,KAAKlB,EAAYmB,iBAAiBjB,EAAiBkB,gBACrEX,EAAgBT,EAAY/B,cAAciC,EAAiBmB,sBACjEd,EAAkBC,EAAWC,EAAeP,GAC5CM,EAAUc,SAAS,SAACrB,GAClBA,EAAaX,iBAAiB,SAAS,YAnChB,SAACU,EAAaC,EAAcC,GACjDD,EAAaS,SAASyF,gBACxBlG,EAAasB,kBAAkBtB,EAAakF,QAAQiB,cAEpDnG,EAAasB,kBAAkB,IAG5BtB,EAAaS,SAASC,MAGzBZ,EAAeC,EAAaC,EAAcC,GA9BvB,SAACF,EAAaC,EAAcmG,EAAclG,GAC/D,IAAMC,EAAeH,EAAY/B,cAAc,IAADmC,OAAKH,EAAapB,GAAE,WAClEoB,EAAad,UAAUC,IAAIc,EAAiBG,iBACxCJ,EAAaS,SAAS2F,aACxBlG,EAAa3B,YAAc,yBAE3B2B,EAAa3B,YAAc4H,EAE7BjG,EAAahB,UAAUC,IAAIc,EAAiBI,WAC9C,CAmBIgG,CAAetG,EAAaC,EAAcA,EAAasG,kBAAmBrG,EAI9E,CAwBMsG,CAAmBxG,EAAaC,EAAcC,GAC9CK,EAAkBC,EAAWC,EAAeP,EAC9C,GACF,GACA,CAQIuG,CAAkBzG,EAAaE,EACjC,GACF,CEiKAwG,CAAiBxG,GAGnBP,SAAS4F,eAAe,QAAQ/G,aAAc,IAAImI,MAAOC,a","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/define property getters","webpack://mesto-project-ff/webpack/runtime/hasOwnProperty shorthand","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { cardTemplate } from '../index.js';\r\nexport { createCard };\r\n\r\n// @todo: Функция создания карточки\r\nconst createCard = ({\r\n  userId, \r\n  dataCard, \r\n  deleteCard, \r\n  addLike, \r\n  openImagePopup}) => {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const countLikes = cardElement.querySelector('.card__counter-like');\r\n\r\n  cardTitle.textContent = dataCard.name;\r\n  cardImage.src = dataCard.link;\r\n  cardImage.alt = 'Фотография с места - ' + dataCard.name;\r\n  cardElement.id = dataCard['_id'];\r\n  countLikes.textContent = dataCard.likes.length;\r\n\r\n  const isLiked = dataCard.likes.some((like) => like._id === userId);\r\n  if (isLiked) {\r\n    likeButton.classList.add('card__like-button_is-active');\r\n  }\r\n\r\n  if (dataCard.owner._id === userId) {\r\n    deleteButton.addEventListener('click', (evt) => {\r\n      deleteCard(dataCard._id);\r\n    });\r\n  } else {\r\n    deleteButton.remove();\r\n  }\r\n\r\n  likeButton.addEventListener('click', (evt) => {\r\n    addLike(evt, dataCard._id, countLikes);\r\n  });\r\n\r\n  cardImage.addEventListener('click', () => {\r\n    openImagePopup(dataCard.link, dataCard.name);\r\n  });\r\n\r\nreturn cardElement;\r\n};\r\n","export { openPopup, closePopup };\r\n\r\n// Функция для открытия попапа\r\nfunction openPopup(popup) {\r\n  // Добавляем класс для открытия попапа\r\n  popup.classList.add('popup_is-opened');\r\n  // Добавляем класс для анимации открытия попапа\r\n  popup.classList.add('popup_is-animated');\r\n  \r\n  // Добавляем обработчик события для нажатия клавиши \"Escape\"\r\n  document.addEventListener('keydown', closeEscPopup);\r\n}\r\n\r\n// Функция для закрытия попапа\r\nfunction closePopup(popup) {\r\n  // Убираем класс для открытия попапа\r\n  popup.classList.remove('popup_is-opened');\r\n  // Добавляем класс для анимации закрытия попапа\r\n  popup.classList.add('popup_is-animated');\r\n\r\n   // Удаляем обработчик события для нажатия клавиши \"Escape\"\r\n  document.removeEventListener('keydown', closeEscPopup);\r\n}\r\n\r\n// Функция для закрытия попапа при нажатии клавиши \"Escape\"\r\nfunction closeEscPopup(evt) {\r\n  if(evt.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened');\r\n    closePopup(popup);\r\n  }\r\n}\r\n","export { enableValidation, clearValidation }\r\n\r\n\r\n// Показать ошибку\r\nconst showInputError = (formElement, inputElement, errorMessage, configValidation) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`)\r\n  inputElement.classList.add(configValidation.inputErrorClass);\r\n  if (inputElement.validity.valueMissing) {\r\n    errorElement.textContent = 'Вы пропустили это поле';\r\n  } else {\r\n    errorElement.textContent = errorMessage;\r\n  }\r\n  errorElement.classList.add(configValidation.errorClass);\r\n};\r\n\r\n// Скрыть ошибку\r\nconst hideInputError = (formElement, inputElement, configValidation) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`)\r\n  inputElement.classList.remove(configValidation.inputErrorClass);\r\n  errorElement.classList.remove(configValidation.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n// Валидация формы\r\nconst checkInputValidity = (formElement, inputElement, configValidation) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, configValidation);\r\n  } else {\r\n    hideInputError(formElement, inputElement, configValidation);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n  };\r\n  \r\n  const toggleButtonState = (inputList, buttonElement, configValidation) => {\r\n    if (hasInvalidInput(inputList)) {\r\n  buttonElement.classList.add(configValidation.inactiveButtonClass);\r\n  buttonElement.setAttribute('disabled', true);\r\n    } else {\r\n  buttonElement.classList.remove(configValidation.inactiveButtonClass);\r\n  buttonElement.removeAttribute('disabled', false);\r\n    }\r\n  };\r\n\r\nconst setEventListeners = (formElement, configValidation) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector));\r\n  const buttonElement = formElement.querySelector(configValidation.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, configValidation);\r\n  inputList.forEach ((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, configValidation);\r\n      toggleButtonState(inputList, buttonElement, configValidation);\r\n    });\r\n  });\r\n  };\r\n\r\n  const enableValidation = (configValidation) => {\r\n    const inputForm = Array.from(document.querySelectorAll(configValidation.formSelector));\r\n    inputForm.forEach((formElement) => {\r\n      formElement.addEventListener('submit', (evt) => {\r\n      evt.preventDefault()\r\n      });\r\n      setEventListeners(formElement, configValidation);\r\n    });\r\n  };\r\n\r\n  // Очистка валидации\r\n  const clearValidation = (formElement, configValidation) => {\r\n    const inputList = Array.from(\r\n      formElement.querySelectorAll(configValidation.inputSelector)\r\n    );\r\n    const buttonElement = formElement.querySelector(\r\n      configValidation.submitButtonSelector\r\n    );\r\n\r\n    inputList.textContent = '';\r\n\r\n    toggleButtonState(inputList, buttonElement, configValidation.inactiveButtonClass);\r\n\r\n    inputList.forEach((inputElement) => {\r\n      hideInputError(formElement, inputElement, configValidation.inputErrorClass, configValidation.errorClass);\r\n      inputElement.setCustomValidity('');\r\n      inputElement.classList.remove(configValidation.inputErrorClass);\r\n    });\r\n  };","const config = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-18',\r\n    headers: {\r\n        authorization: 'ee6775c4-c17e-432d-bed8-520cdb750d81',\r\n        'Content-Type': 'application/json',\r\n    },\r\n};\r\n\r\nconst handlerResult = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    } // Если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\n// GET-запрос информации о пользователе\r\nexport const getUserInfoFromServer = () => {           \r\n    return  fetch(`${config.baseUrl}/users/me`, {\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Загрузка карточек с сервера\r\nexport const getInitialCards = () => {          \r\n    return  fetch(`${config.baseUrl}/cards`, {\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Редактирование профиля\r\nexport const patchProfileForm = (userInfo) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: userInfo.name,\r\n            about: userInfo.about,\r\n        })\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Запрос обновления аватара\r\nexport const updateAvatar = (link) => {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: link.link,\r\n        }),\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Добавление новой карточки\r\n\r\nexport const postAddNewCard = (dataCard) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: dataCard.name,\r\n            link: dataCard.link,\r\n        })\r\n    }).then(handlerResult);\r\n};\r\n\r\n// удаление карточки\r\nexport const handleDeleteCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Добавление лайка\r\n\r\nexport const handleCardLike = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};\r\n\r\n// Запрос удаления лайка\r\nexport const deleteLikeCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers,\r\n    }).then(handlerResult);\r\n};","import './pages/index.css'; // импорт главного файла стилей\r\nimport { createCard } from './components/card.js';\r\nimport { openPopup, closePopup } from './components/modal.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\nimport {\r\n  getUserInfoFromServer,\r\n  getInitialCards,\r\n  patchProfileForm,\r\n  postAddNewCard,\r\n  handleDeleteCard,\r\n  updateAvatar,\r\n  handleCardLike,\r\n  deleteLikeCard,\r\n} from './components/api.js';\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\nexport const cardTemplate = document.querySelector('#card-template').content;\r\nexport const newPlace = document.forms['new-place'];\r\nconst placeName = newPlace.querySelector('.popup__input_type_card-name');\r\nconst placeLink = newPlace.querySelector('.popup__input_type_url');\r\n\r\n// Находим все элементы с классом 'popup' на странице\r\nconst popups = document.querySelectorAll('.popup');\r\n\r\n// Находим элементы попапов на странице\r\nconst popupProfile = document.querySelector('.popup_type_edit');\r\nconst popupAddNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupImage = document.querySelector('.popup_type_image');\r\n\r\n// Находим кнопки для открытия попапов\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\n// Находим элементы внутри попапа изображения\r\nconst popupImageImage = document.querySelector('.popup__image');\r\nconst popupCaptionImage = document.querySelector('.popup__caption');\r\n\r\n// Находим элементы формы редактирования профиля\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\n\r\nconst profileForm = document.forms['edit-profile'];\r\nconst avatarForm = document.forms['edit-avatar'];\r\n\r\nconst modalAvatar = document.querySelector('.popup_type_avatar');\r\nconst nameInput = profileForm.querySelector('.popup__input_type_name');\r\nconst jobInput = profileForm.querySelector('.popup__input_type_description');\r\nconst popupAlert = document.querySelector('.popup_type_alert');\r\nconst submitDeleteCard = popupAlert.querySelector('.popup__button-alert');\r\n\r\nlet userId;\r\n\r\n// Функция кнопки сохранения\r\nconst renderLoading = (isLoading, buttonElement) => {\r\n  if (isLoading) {\r\n    buttonElement.textContent = 'Сохранение...';\r\n  } else {\r\n    buttonElement.textContent = 'Сохранение...';\r\n    buttonElement.classList.add(configValidation.inactiveButtonClass);\r\n    buttonElement.setAttribute('disabled', true);\r\n  }\r\n};\r\n\r\n//Функция добавления новой карточки\r\nnewPlace.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  const buttonElement = evt.submitter;\r\n  renderLoading(true, buttonElement);\r\n  postAddNewCard({\r\n    name: placeName.value,\r\n    link: placeLink.value,\r\n  }).then((dataCard) => {\r\n    const cardElement = createCard({\r\n      userId, dataCard, deleteCard, addLike, openImagePopup,\r\n    });\r\n    cardsContainer.prepend(cardElement);\r\n    newPlace.reset();\r\n    closePopup(popupAddNewCard);\r\n  }).catch((err) => {\r\n    console.log('Ошибка добавления карточки:', err);\r\n  }).finally(() => {\r\n    renderLoading(false, buttonElement);\r\n  });\r\n});\r\n\r\n// Функция лайка\r\nconst addLike = (evt, cardId, countLikes) => {\r\n  if (evt.target.classList.contains('card__like-button_is-active')) {\r\n    deleteLikeCard(cardId)\r\n    .then((updateCard) => {\r\n      evt.target.classList.remove('card__like-button_is-active');\r\n      countLikes.textContent = updateCard.likes.length;\r\n    }).catch((err) => {\r\n      console.log('Ошибка удаления лайка:', err);\r\n    });\r\n  } else {\r\n    handleCardLike(cardId)\r\n    .then((updateCard) => {\r\n      evt.target.classList.add('card__like-button_is-active');\r\n      countLikes.textContent = updateCard.likes.length;\r\n    }).catch((err) => {\r\n      console.log('Ошибка добавления лайка:', err);\r\n    });\r\n  }\r\n};\r\n\r\n// Функция удаления карточки\r\nconst deleteCard = (cardId) => {\r\n  openPopup(popupAlert);\r\n  popupAlert.dataset.cardId = cardId;\r\n};\r\n\r\nconst confirmDeleteCard = () => {\r\n  handleDeleteCard(popupAlert.dataset.cardId)\r\n  .then((result) => {\r\n    console.log(result);\r\n    const delCard = document.getElementById(popupAlert.dataset.cardId);\r\n    delCard.remove();\r\n    closePopup(popupAlert);\r\n  }).catch((err) => {\r\n    console.log('Ошибка удаления карточки:', err);\r\n  });\r\n};\r\n\r\n// Функция для открытия попапа изображения\r\nconst openImagePopup = (link, alt) => {\r\n  popupImageImage.src = link;\r\n  popupImageImage.alt = alt;\r\n  popupCaptionImage.textContent = alt;\r\n  openPopup(popupImage);\r\n};\r\n\r\n// Функция редактирования профиля\r\nprofileForm.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  const buttonElement = evt.submitter;\r\n  renderLoading(true, buttonElement);\r\n  patchProfileForm({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  }).then((userInfo) => {\r\n    profileTitle.textContent = userInfo.name;\r\n    profileDescription.textContent = userInfo.about;\r\n    closePopup(popupProfile);\r\n  }).catch((err) => {\r\n    console.log('Ошибка изменения данных пользователя:', err);\r\n  }).finally(() => {\r\n    renderLoading(false, buttonElement);\r\n  });\r\n});\r\n\r\n// Функция обновления аватара\r\nconst updateAvatarForm = (evt) => {\r\n  evt.preventDefault();\r\n  const buttonElement = evt.submitter;\r\n  renderLoading(true, buttonElement);\r\n  updateAvatar({\r\n    link: avatarForm.link.value,\r\n  }).then((userInfo) => {\r\n    profileAvatar.style.backgroundImage = `url(${userInfo.avatar})`;\r\n    closePopup(modalAvatar);\r\n  }).catch((err) => {\r\n    console.log('Ошибка добавления аватара:', err);\r\n  }).finally(() => {\r\n    renderLoading(false, buttonElement);\r\n  });\r\n};\r\n\r\n// Добавляем обработчик события для открытия попапа редактирования профиля\r\neditButton.addEventListener('click', () => {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  openPopup(popupProfile);\r\n  clearValidation(profileForm, configValidation);\r\n});\r\n\r\naddButton.addEventListener('click', () => {\r\n  newPlace.reset();\r\n  openPopup(popupAddNewCard);\r\n  clearValidation(newPlace, configValidation);\r\n});\r\n\r\nprofileAvatar.addEventListener('click', () => {\r\n  avatarForm.reset();\r\n  clearValidation(avatarForm, configValidation);\r\n  openPopup(modalAvatar);\r\n});\r\n\r\nsubmitDeleteCard.addEventListener('click', confirmDeleteCard);\r\navatarForm.addEventListener('submit', updateAvatarForm)\r\n\r\n// Вывод карточек на страницу с информацией пользователя\r\nPromise.all([getInitialCards(), getUserInfoFromServer()])\r\n  .then(([initialCards, userInfo]) => {\r\n    profileTitle.textContent = userInfo.name;\r\n    profileDescription.textContent = userInfo.about;\r\n    profileAvatar.style.backgroundImage = `url(${userInfo.avatar})`;\r\n    userId = userInfo._id;\r\n\r\n    initialCards.forEach((dataCard) => {\r\n      const cardElement = createCard({\r\n        userId, dataCard, deleteCard, addLike, openImagePopup,\r\n      });\r\n      cardsContainer.append(cardElement);\r\n    });\r\n  }).catch((err) => {\r\n    console.log('Ошибка передачи карточки:', err);\r\n  });\r\n\r\n  // Добавляем обработчики событий для каждого попапа на оверлэй и кнопку\r\npopups.forEach((popup) => {\r\n  popup.addEventListener('click', (evt) => {\r\n    // Закрываем попап, если кликнули по самому попапу или по элементу с классом 'popup__close'\r\n    if (\r\n      evt.target === evt.currentTarget ||\r\n      evt.target.classList.contains('popup__close')\r\n    ) {\r\n      const modal = document.querySelector('.popup_is-opened');\r\n      closePopup(modal);\r\n    }\r\n  });\r\n});\r\n\r\n  const configValidation = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    errorVisible: '.popup__error_visible',\r\n    inputErrorVisible: '.popup__input_type_error',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible',\r\n  };\r\n\r\n  enableValidation(configValidation);\r\n\r\n  // Функция для установки текущего года в элемент с id 'year'\r\ndocument.getElementById('year').textContent = new Date().getFullYear();"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","createCard","_ref","userId","dataCard","deleteCard","addLike","openImagePopup","cardElement","cardTemplate","querySelector","cloneNode","cardImage","deleteButton","likeButton","cardTitle","countLikes","textContent","name","src","link","alt","id","likes","length","some","like","_id","classList","add","owner","addEventListener","evt","remove","openPopup","popup","document","closeEscPopup","closePopup","removeEventListener","hideInputError","formElement","inputElement","configValidation","errorElement","concat","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","inactiveButtonClass","removeAttribute","setAttribute","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","setCustomValidity","config","baseUrl","headers","authorization","handlerResult","res","ok","json","Promise","reject","status","cardsContainer","content","newPlace","forms","placeName","placeLink","popups","popupProfile","popupAddNewCard","popupImage","editButton","addButton","popupImageImage","popupCaptionImage","profileTitle","profileDescription","profileAvatar","profileForm","avatarForm","modalAvatar","nameInput","jobInput","popupAlert","submitDeleteCard","renderLoading","isLoading","preventDefault","submitter","value","fetch","method","body","JSON","stringify","then","prepend","reset","catch","err","console","log","finally","cardId","target","contains","deleteLikeCard","updateCard","handleCardLike","dataset","userInfo","about","result","getElementById","avatar","style","backgroundImage","all","_ref2","initialCards","append","currentTarget","formSelector","errorVisible","inputErrorVisible","patternMismatch","errorMessage","valueMissing","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","Date","getFullYear"],"sourceRoot":""}